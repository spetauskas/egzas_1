// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using egzas_1;

#nullable disable

namespace egzas_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241208192709_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("AccountPasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("AccountPasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AccountRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = new Guid("00aac29c-00de-4287-a801-65b7d0d0081b"),
                            AccountName = "user1",
                            AccountPasswordHash = new byte[] { 73, 157, 23, 29, 207, 7, 156, 21, 46, 136, 100, 86, 13, 9, 44, 80, 183, 41, 246, 225, 158, 26, 199, 20, 32, 132, 68, 177, 7, 138, 5, 242 },
                            AccountPasswordSalt = new byte[] { 8, 80, 217, 152, 156, 222, 29, 38, 34, 112, 231, 54, 167, 149, 224, 70, 72, 84, 164, 238, 199, 90, 194, 240, 10, 112, 45, 67, 239, 224, 146, 195, 6, 102, 83, 213, 198, 198, 46, 128, 167, 22, 245, 169, 123, 163, 45, 77, 209, 76, 38, 133, 217, 113, 235, 47, 241, 212, 167, 9, 110, 5, 45, 188 },
                            AccountRole = "user"
                        },
                        new
                        {
                            AccountId = new Guid("bdba6124-913d-4a75-82c3-bd2220b5f414"),
                            AccountName = "user2",
                            AccountPasswordHash = new byte[] { 154, 16, 30, 144, 83, 187, 87, 212, 49, 186, 245, 76, 243, 11, 55, 250, 83, 247, 8, 230, 215, 204, 218, 88, 7, 79, 65, 33, 239, 114, 8, 136 },
                            AccountPasswordSalt = new byte[] { 125, 148, 19, 222, 192, 198, 207, 151, 155, 108, 71, 108, 241, 185, 81, 124, 33, 221, 187, 64, 140, 183, 1, 6, 154, 159, 4, 184, 81, 55, 235, 94, 243, 70, 154, 226, 239, 65, 204, 217, 30, 49, 30, 198, 242, 175, 102, 213, 188, 234, 25, 10, 246, 19, 36, 27, 165, 53, 8, 70, 214, 65, 147, 229 },
                            AccountRole = "user"
                        },
                        new
                        {
                            AccountId = new Guid("e14c5c81-088c-4aa1-8ac8-83ace6694e0b"),
                            AccountName = "user3",
                            AccountPasswordHash = new byte[] { 117, 122, 126, 122, 226, 6, 37, 113, 110, 52, 19, 114, 126, 46, 244, 72, 65, 212, 129, 181, 137, 144, 40, 176, 57, 247, 217, 167, 204, 183, 80, 95 },
                            AccountPasswordSalt = new byte[] { 9, 206, 101, 77, 74, 206, 15, 38, 123, 53, 186, 31, 229, 241, 49, 49, 178, 85, 123, 250, 240, 47, 203, 180, 7, 154, 56, 50, 131, 81, 24, 100, 116, 41, 237, 80, 230, 94, 246, 223, 70, 16, 221, 115, 108, 121, 34, 202, 249, 119, 173, 10, 72, 21, 69, 155, 104, 207, 44, 176, 101, 186, 98, 181 },
                            AccountRole = "user"
                        },
                        new
                        {
                            AccountId = new Guid("3026340b-e5d3-4055-baf7-b6b4fc574c8d"),
                            AccountName = "user4",
                            AccountPasswordHash = new byte[] { 61, 114, 24, 13, 174, 186, 233, 56, 207, 118, 111, 82, 45, 30, 237, 19, 164, 18, 201, 55, 241, 163, 47, 48, 51, 187, 215, 145, 8, 97, 215, 175 },
                            AccountPasswordSalt = new byte[] { 99, 207, 26, 20, 22, 23, 229, 252, 70, 162, 184, 134, 116, 237, 66, 156, 179, 130, 211, 167, 63, 199, 243, 24, 91, 147, 232, 237, 141, 38, 1, 148, 197, 241, 192, 22, 8, 90, 31, 252, 117, 204, 43, 243, 243, 162, 37, 18, 230, 242, 75, 47, 228, 107, 205, 11, 17, 161, 197, 27, 168, 61, 199, 131 },
                            AccountRole = "user"
                        },
                        new
                        {
                            AccountId = new Guid("21816f66-e79e-40e6-aabb-031fd2437088"),
                            AccountName = "user5",
                            AccountPasswordHash = new byte[] { 166, 65, 189, 10, 160, 156, 202, 200, 197, 150, 247, 72, 163, 9, 106, 103, 99, 75, 112, 83, 80, 236, 94, 188, 110, 25, 169, 195, 150, 73, 177, 141 },
                            AccountPasswordSalt = new byte[] { 237, 152, 197, 164, 98, 128, 133, 98, 80, 85, 190, 177, 123, 182, 235, 42, 73, 222, 28, 238, 83, 216, 240, 62, 250, 239, 231, 121, 93, 22, 32, 142, 20, 254, 231, 15, 51, 94, 21, 243, 127, 152, 55, 80, 112, 71, 116, 168, 152, 238, 114, 165, 108, 35, 162, 210, 135, 59, 105, 116, 234, 89, 214, 131 },
                            AccountRole = "user"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserIdentityNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceHouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserResidenceStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2eabcfcb-ea1a-440d-a8f0-d5ab3da0d3b2"),
                            AccountId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCountry = "USA",
                            UserEmail = "john.doe@example.com",
                            UserIdentityNumber = 12345,
                            UserName = "John",
                            UserResidenceCity = "New York",
                            UserResidenceHouseNumber = "123",
                            UserResidenceStreet = "Broadway",
                            UserSurName = "Doe"
                        },
                        new
                        {
                            Id = new Guid("62e716ef-c6fd-4a72-8bef-b35565eb5fbc"),
                            AccountId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCountry = "Canada",
                            UserEmail = "jane.smith@example.com",
                            UserIdentityNumber = 54321,
                            UserName = "Jane",
                            UserResidenceCity = "Toronto",
                            UserResidenceHouseNumber = "456",
                            UserResidenceStreet = "Queen Street",
                            UserSurName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("e326ed26-7f89-4a97-9c7d-7834e196a584"),
                            AccountId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCountry = "Australia",
                            UserEmail = "alice.johnson@example.com",
                            UserIdentityNumber = 98765,
                            UserName = "Alice",
                            UserResidenceCity = "Sydney",
                            UserResidenceHouseNumber = "789",
                            UserResidenceStreet = "George Street",
                            UserSurName = "Johnson"
                        },
                        new
                        {
                            Id = new Guid("df4b7154-4917-4cec-b54d-d9ccdf624643"),
                            AccountId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCountry = "UK",
                            UserEmail = "bob.brown@example.com",
                            UserIdentityNumber = 67890,
                            UserName = "Bob",
                            UserResidenceCity = "London",
                            UserResidenceHouseNumber = "221B",
                            UserResidenceStreet = "Baker Street",
                            UserSurName = "Brown"
                        },
                        new
                        {
                            Id = new Guid("41d5ded5-2d9e-4527-94f7-ffe46da05d74"),
                            AccountId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserCountry = "New Zealand",
                            UserEmail = "emily.davis@example.com",
                            UserIdentityNumber = 12321,
                            UserName = "Emily",
                            UserResidenceCity = "Auckland",
                            UserResidenceHouseNumber = "102",
                            UserResidenceStreet = "Victoria Street",
                            UserSurName = "Davis"
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("User", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Account", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
